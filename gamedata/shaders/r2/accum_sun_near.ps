#include "common.h"
#include "lmodel.h"
#include "shadow.h"
#include "gbuffer.h"

float4 	main		( float2 tc : TEXCOORD0, float4 tcJ : TEXCOORD1 ) : COLOR
{
  //float4 _P		= tex2D 	(s_position, 	tc);
  //half4  _N		= tex2D 	(s_normal,   	tc);

  GBuffer GBuffer = UnpackGBuffer (tc.xy);

	// ----- light-model
	half 	m	= xmaterial	;
# ifndef USE_R2_STATIC_SUN
			m 	= GBuffer.MaterialID		;
# endif
	half4	light 	= plight_infinity (m, GBuffer.Position, GBuffer.Normal, Ldynamic_dir);

	// ----- shadow
  	float4 	P4 	= float4	(GBuffer.Position,1.f);
	float4 	PS	= mul		(m_shadow, 	P4);
	half 	s 	= sunmask	(P4);
	#ifdef 	USE_SJITTER
	  s 	*= shadowtest_sun 	(PS,tcJ);
	#else
	  s 	*= shadow		(PS);
	#endif

	return 		blend		(Ldynamic_color * light * s,tc);
}